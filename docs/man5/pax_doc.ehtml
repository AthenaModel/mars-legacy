<<manpage pax_doc(5) "Paxsim Document Format">>

<<section SYNOPSIS>>

<<itemlist>>

<<section DESCRIPTION>>

This man page defines the pax_doc(5) format for writing HTML
documents.  It is an "Extended HTML" format, i.e., it extends
HTML with embedded macros.  It is similar to <<xref pax_man(5)>>, but
is used for arbitrary documents.  <<xref pax_doc(1)>> translates
pax_doc(5) files into standard HTML files.<p>

pax_doc(5) documents can contain automatically numbered and linked
tables, figures, and sections; sections can be nested arbitrarily
deeply, and the table of contents and lists of figures and tables can
be generated automatically.<p>

<<section "BASIC SYNTAX">>

The majority of the content of a pax_doc(5) document is standard HTML
body text.  The author is responsible for the
&lt;html&gt;, &lt;head&gt;, and &lt;body&gt; tags, and for any style
sheet information; they are not added automatically.<p>

Macros are entered in double angle brackets, like so:<p>

<pre>
<<lb>>section introduction "Introduction"<<rb>>
</pre>

Many macros occur in pairs; for example, tables begin with 
the <<iref table>> macro and end with the <<iref /table>> macro:<p>

<pre>
<<lb>>table data "Important Data"<<rb>>
    .
    .
    .
<<lb>>/table<<rb>>
</pre>

<<section "DOCUMENT STRUCTURE">>

pax_doc(5) can be used to write any kind of document that can be
represented in HTML.  If you wish to use pax_doc(5)'s automatic
numbering and table-of-contents generation, your document will
typically look like this:<p>

<ul>
  <li> The document title, formatted in HTML.
  <li> A list of change entries.
  <li> A table of <<iref contents>>.
  <li> Lists of <<iref figures>> and <<iref tables>>.
  <li> Zero or more <<iref preface>> sections.  A preface section has
       a title but no section number, and cannot have subsections.
  <li> Zero or more numbered sections, each of which may have zero or
       more subsections.
  <li> Numbered sections may contain <<iref table>>s and
       <<iref figure>>s.
</ul><p>

All of these features are optional; in particular, there's no need to
have a list of figures or tables unless you have figures or tables.<p>

<<section "IDENTIFIERS">>

To support auto-numbering and hyperlinking, every section, figure, and
table has a unique identifier.

<<subsection "Section Identifiers">>

pax_doc(5) allows you to define automatically-numbered sections and
subsections.  Each section and subsection has an ID that uniquely
identifies it; the ID also indicates how the section relates to its
neighbors.<p>

The ID for a top-level section (e.g., Section 1, Section 2, etc.) must
be a single word containing no whitespace or punctuation.<p>

The ID for a subsection is "<i>parentId</i>.<i>name</i>" where
<i>parentId</i> is the parent's ID and <i>name</i> is a single word
containing no whitespace or punctuation.<p>

For example, a document might have an introductory section which contains
two subsections: nomenclature to be used in the document, and a list
of references.  In the final document, we wish these sections to be
numbered and titled as follows:<p>

<ul>
  <li> 1. Introduction</li>
  <li> 1.1 Conventions used in this document</li>
  <li> 1.2 References</li>
</ul><p>

In the pax_doc(5) input, the section headers are written as follows:<p>

<pre>
    <<lb>>section intro "Introduction"<<rb>>
    <<lb>>section intro.conventions "Conventions used in this document"<<rb>>
    <<lb>>section intro.references "References"<<rb>>
</pre>

In essence, each component of the numeric section number is replaced
by a short word. You may nest sections six levels deep, but
the normal constraints apply; for example, you can't add a section two
levels below its parent, and the order of sections in the input needs
to match the numeric order in the output.<p>

<<subsection "Figure and Table Identifiers">>

Figure and table identifiers look like <code>fig.<i>name</i></code> and
<code>tab.<i>name</i></code>.  The prefix ensures that they won't be
confused with section IDs.<p>

<<section MACROS>>

pax_doc(5) man pages may use the following macros, as well as all
commands defined by the <<xref template(n)>>.  Note that these
macros are simply Tcl commands; if you define your own macros
(see <<xref "DEFINING MACROS">>) you can call them as such.<p>

<<deflist macros>>

<<defitem banner {banner}>>

Returns the banner for the top of the page.<p>

<<defitem changelog {changelog}>>

Begins a document change log.<p>

<<defitem change {change <i>date status initiator</i>}>>

Begins a change log entry within a <<iref changelog>>.  The
<i>date</i> is the date at which the change was made; the
<i>status</i> indicates the status of the document, e.g., "New",
"Update", "Rewrite".  The <i>initiator</i> is the name of the person
making the change.<p>

The <<iref change>> tag is followed by a narrative description of the
change, which is follows by a <<iref /change>> tag.<p>

<<defitem /change {/change}>>

Ends a change log entry within a <<iref changelog>>.<p>

<<defitem /changelog {changelog}>>

Ends a document change log.<p>

<<defitem contents {contents}>>

This macro is replaced with a complete table of contents;
the table of contents is followed by lists of tables and
figures if need be.<p>

<<defitem exppass {exppass}>>

The <<iref exppass>> command is seldom actually used as a
macro; it returns the pass number, "1" or "2".<p>

As described in <<xref "DEFINING MACROS">>, pax_doc(1) makes two
passes over the document.  It accumulates table-of-contents
information in the first pass, and actually outputs the formatted HTML
file in the second.  If you're defining new macros, you might wish to
do the same; in this case, your macros will need to be able to
distinguish between the passes.<p>

<<defitem figure {figure <i>id title filename</i>}>>

Adds a figure to the document.  The figure is identified by
<i>id</i>, which must have the form <code>fig.<i>name</i></code>;
the <i>title</i> will be included in the caption.  The figure itself
is an image file called <i>filename</i>; the file must reside in the
same directory as the generated HTML file, and must be a format
recognized by the browser (e.g., GIF, PNG, or JPEG).<p>

Figures will be auto-numbered, and included in the list of
<<iref figures>>.<p>

<<defitem figures {figures}>>

This macro will be replaced by a list of the figures found in the
document.  Note that it is rarely necessary to use this macro
explicitly, because the table of <<iref contents>> will include it
automatically if there are any figures in the document.<p>

<<defitem hrule {hrule}>>

Adds an HTML horizontal rule to the output.<p>

<<defitem lb {lb}>>

Returns the string "<<lb>>".  Use this to include a literal "<<lb>>"
in the output.<p>

<<defitem link {link <i>url</i> ?<i>anchor</i>?}>>

Adds a hyperlink to the output.  The address is <i>url</i>; the
displayed text is <i>anchor</i>, which defaults to the <i>url</i>.<p>

<<defitem manurl {manurl}>>

Returns the relative URL for the root of the man page directory tree.<p>

<<defitem nbsp {nbsp <i>text</i>}>>

Normalizes whitespace in <i>text</i>, and then replaces all space
characters with HTML non-breaking spaces.<p>

<<defitem preface {preface <i>id title</i>}>>

Adds an unnumbered section header to the document; it is uniquely
identifed by <i>id</i>, and has the specified <i>title</i>:<p>

<pre>
     <<lb>>preface foreward "Author's Foreward"<<rb>>
</pre>

Unnumbered sections may not have subsections; hence, the <i>id</i> may
not contain any periods.<p>

Unnumbered sections may appear anywhere in the document, but really
shouldn't be used anyway but the beginning or the end.<p>

<<defitem section {section <i>id title</i>}>>

Adds a numbered section header to the document; the section has the
specified <i>id</i> and <i>title</i>.  See
<<xref "Section Identifiers">> for a discussion of how to choose
the <i>id</i>.<p>

<<defitem standardstyle {standardstyle}>>

Returns the standard list of CSS styles; include it in the
&lt;style&gt;&lt;/style&gt; tag in the HTML header.<p>

<<defitem swallow {swallow <i>body</i>}>>

<<iref swallow>> allows your document to define new macros and
otherwise interact with the Tcl interpreter while ensuring that
nothing is added to the output.  See <<xref "DEFINING MACROS">>.<p>

<<defitem table {table <i>id title</i>}>>

Begins and captions an HTML table; the user is responsible for the
&lt;tr&gt; tags and their content.  The table <i>id</i> must have the
form <code>tab.<i>name</i></code>, while the title is arbitrary.<p>

Tables will be auto-numbered, and included in the list of
<<iref tables>>.<p>

The table must be ended with a <<iref /table>> tag.<p>

<<defitem /table {/table}>>

Ends a <<iref table>>.<p>

<<defitem tables {tables}>>

This macro will be replaced by a list of the tables found in the
document.  Note that it is rarely necessary to use this macro
explicitly, because the table of <<iref contents>> will include it
automatically if there are any tables in the document.<p>


<<defitem rb {rb}>>

Returns the string "<<rb>>".  Use this to include a literal "<<rb>>"
in the output.<p>

<<defitem version {version}>>

Returns the current Paxsim version, which is read from the PAX_VERSION
environment variable; if the environment variable is undefined, it
returns "x.y.z".  <strong>TBD</strong>: This needs to be fixed.<p>

<<defitem xref {xref <i>id</i> ?<i>anchor</i>?}>>

Creates a cross-reference link given a cross-reference <i>id</i>.
If <i>anchor</i> is specified, it's used as the link text; otherwise,
the default link text associated with the <i>id</i> is used.<p>

The valid cross-reference IDs are as follows:<p>

<ul>
  <li> Any of the document's section, figure, or table IDs.  The
       default link text is "Section <i>num</i>", "Figure <i>num</i>",
       or "Table <i>num</i>".  For unnumbered sections, the default
       link text is the section title.<p>

  <li> Any "http:" address.  The default link text is the address itself.<p>

  <li> Any man page that exists in the same documentation tree.  Man
       page IDs look like "<i>name</i>(<i>section</i>)", e.g.,
       "pax_doc(5)".  The HTML file for the man page is assumed to
       have the address<p>

       <i>root</i>/man<i>section</i>/<i>name</i>.html<p>

       where <i>root</i> is the root of the documentation tree.
       <i>root</i> is usually a relative path name, and defaults to
       ".", the current working directory when <<xref pax_doc(1)>>
       is executed.  It can be specified explicitly using
       <<xref pax_doc(1)>>'s <code>-docroot</code> option.<p>

  <li> Any ID registered using <<iref xrefset>>.  For example, the
       following macro registers a link to the Tcl linsert(n) man page:<p>

       <pre><<lb>>xrefset linsert(n) http://www.tcl.tk/man/tcl8.4/TclCmd/linsert.htm<<rb>></pre>
</ul><p>

<<defitem xrefset {xrefset <i>id anchor url</i>}>>

Defines an additional target for the <<iref xref>> macro.  The
<i>id</i> identifies the cross-referenced material; it's the string
that's passed to <<iref xref>> later on.  The <i>anchor</i> is the
default link text, and the <i>url</i> is, of course, the web address
of the material.<p>

<</deflist>>

<<section "DEFINING MACROS">>

pax_doc(5) macros have Tcl syntax; in fact, a macro can contain
arbitrary Tcl 
code.  In particular, the man page can define new
macros using the standard Tcl <tt>proc</tt> command or the
<<xref template(n) template>> command.  This is usually done in
conjunction with the <<iref swallow>> macro, to avoid including the
output of <tt>proc</tt> or <<xref template(n) template>> in the
finished man page.<p>

For example, here's the definition of a macro that returns a timestamp
using Tcl's <tt>clock</tt> command:<p>

<pre>
<<lb>>swallow {
    proc timestamp {} {
        return [clock format [clock seconds]]
    }
}<<rb>>
</pre>

When writing macros, remember that pax_doc(1) makes <b>two passes</b>
over its input, and so every macro will be executed <b>twice</b>.
This is usually only a problem when a macro is accumulating data into
a Tcl variable in the first pass so that it can be used during the
second pass (e.g., to output an accumulated list, such as a table of
contents).<p>

In such a case, the macro can use <<iref exppass>> to find out which
pass it is.<p>

<<section AUTHOR>>

Will Duquette<p>

<<section HISTORY>>

Originally written for JNEM as jnem_ehtml(5); migrated to Paxsim in
September 2008.

<</manpage>>


