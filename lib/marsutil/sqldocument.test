# -*-Tcl-*-
#-----------------------------------------------------------------------
# TITLE:
#    sqldocument.test
#
# AUTHOR:
#    Will Duquette
#
# DESCRIPTION:
#    Tcltest test suite for marsutil(n) sqldocument.tcl
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Initialize tcltest(n)

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2.2 
    eval ::tcltest::configure $argv
}
 
#-----------------------------------------------------------------------
# Load the package to be tested

package require sqlite3
package require marsutil 1.0

#-----------------------------------------------------------------------
# Test Suite
#
# The tests run in a namespace so as not to interfere with other
# test suites.

namespace eval ::marsutil::test {
    #-------------------------------------------------------------------
    # Set up the test environment

    # Import tcltest(n)
    namespace import ::tcltest::*

    # Import the code to be tested
    namespace import ::marsutil::*

    proc setup {} {
        sqldocument db
        db open :memory:

        db eval {
            CREATE TABLE first(
                first_id INTEGER PRIMARY KEY,
                name TEXT
            );

            CREATE TABLE second(
                second_id INTEGER PRIMARY KEY,
                first_id INTEGER REFERENCES first(first_id)
                         ON DELETE CASCADE,
                parent INTEGER REFERENCES second(second_id)
                         ON DELETE CASCADE,
                name TEXT
            );

            CREATE TABLE third(
                third_id INTEGER PRIMARY KEY,
                second_id REFERENCES second(second_id),
                name TEXT
            );

            CREATE TABLE fourth(
                fourth_id INTEGER PRIMARY KEY,
                name TEXT
            );

            INSERT INTO first(first_id,name) VALUES(1,'A');
            INSERT INTO first(first_id,name) VALUES(2,'B');
            INSERT INTO first(first_id,name) VALUES(3,'C');

            INSERT INTO second(second_id,first_id,parent,name)
            VALUES(1,1,1,"X");

            INSERT INTO second(second_id,first_id,parent,name)
            VALUES(2,2,1,"Y");

            INSERT INTO second(second_id,first_id,parent,name)
            VALUES(3,3,2,"Z");

            INSERT INTO second(second_id,first_id,parent,name)
            VALUES(4,2,NULL,"W");

            INSERT INTO fourth(fourth_id,name) VALUES(4,'D');
            INSERT INTO fourth(fourth_id,name) VALUES(5,'E');
            INSERT INTO fourth(fourth_id,name) VALUES(6,'F');
        }
    }

    proc cleanup {} {
        db destroy
    }

    #-------------------------------------------------------------------
    # delete

    test delete-1.1 {delete one row} -setup {
        setup
    } -body {
        db delete first {first_id=2}
        db eval {SELECT * FROM first}
    } -cleanup {
        cleanup
    } -result {1 A 3 C}

    test delete-1.2 {delete rows from several tables} -setup {
        setup
    } -body {
        db delete first {first_id=2} fourth {fourth_id=5}

        set a [db eval {SELECT * FROM first}]
        set b [db eval {SELECT * FROM fourth}]
        
        list $a $b
    } -cleanup {
        cleanup
    } -result {{1 A 3 C} {4 D 6 F}}


    test delete-2.1 {delete one row, -grab} -setup {
        setup
    } -body {
        db delete -grab second {second_id=4}
    } -cleanup {
        cleanup
    } -result {second {4 2 NULL 'W'}}
    
    test delete-2.2 {delete rows from multiple tables, -grab} -setup {
        setup
    } -body {
        db delete -grab second {second_id=4} fourth {fourth_id=5}
    } -cleanup {
        cleanup
    } -result {second {4 2 NULL 'W'} fourth {5 'E'}}

    test delete-2.3 {cascading delete, -grab} -setup {
        setup
    } -body {
        db delete -grab first {first_id=1}
    } -cleanup {
        cleanup
    } -result {first {1 'A'} second {1 1 1 'X' 2 2 1 'Y' 3 3 2 'Z'}}

    #-------------------------------------------------------------------
    # Cleanup

    cleanupTests
}

namespace delete ::marsutil::test







